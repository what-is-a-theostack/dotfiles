UnDo
 ctrl-alt-5 = 'workspace 5_media'
start-at-login = false5
inner.horizontal = 05
inner.vertical =   05
outer.left =       05
outer.bottom =     05
outer.top =        05
outer.right =      05
alt-b = 'workspace B'5
alt-c = 'workspace C'5
[alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need5
alt-c = 'workspace C' # 5
alt-d = 'workspace D'5
alt-e = 'workspace E'5
$alt-e = 'workspace E' # For File Exp5
alt-f = 'workspace F'5
alt-f = 'workspace F' 
alt-g = 'workspace G'
alt-i = 'workspace I'
alt-m = 'workspace M'
alt-n = 'workspace N'
alt-o = 'workspace O'
alt-p = 'workspace P'
alt-q = 'workspace Q'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-u = 'workspace U'
alt-v = 'workspace V'
alt-w = 'workspace W'
alt-x = 'workspace X'
alt-y = 'workspace Y'
alt-z = 'workspace Z'5
)alt-e = 'workspace E' # For File Explorer5
(alt-shift-1 = 'move-node-to-workspace 1'
(alt-shift-2 = 'move-node-to-workspace 2'
(alt-shift-3 = 'move-node-to-workspace 3'
(alt-shift-4 = 'move-node-to-workspace 4'
(alt-shift-5 = 'move-node-to-workspace 5'
(alt-shift-6 = 'move-node-to-workspace 6'
(alt-shift-7 = 'move-node-to-workspace 7'
(alt-shift-8 = 'move-node-to-workspace 8'
(alt-shift-9 = 'move-node-to-workspace 9'
(alt-shift-a = 'move-node-to-workspace A'
(alt-shift-b = 'move-node-to-workspace B'
(alt-shift-c = 'move-node-to-workspace C'
(alt-shift-d = 'move-node-to-workspace D'
(alt-shift-e = 'move-node-to-workspace E'
(alt-shift-f = 'move-node-to-workspace F'
(alt-shift-g = 'move-node-to-workspace G'
(alt-shift-i = 'move-node-to-workspace I'
(alt-shift-m = 'move-node-to-workspace M'
(alt-shift-n = 'move-node-to-workspace N'
(alt-shift-o = 'move-node-to-workspace O'
(alt-shift-p = 'move-node-to-workspace P'
(alt-shift-q = 'move-node-to-workspace Q'
(alt-shift-r = 'move-node-to-workspace R'
(alt-shift-s = 'move-node-to-workspace S'
(alt-shift-t = 'move-node-to-workspace T'
(alt-shift-u = 'move-node-to-workspace U'
(alt-shift-v = 'move-node-to-workspace V'
(alt-shift-w = 'move-node-to-workspace W'
(alt-shift-x = 'move-node-to-workspace X'
(alt-shift-y = 'move-node-to-workspace Y'
(alt-shift-z = 'move-node-to-workspace Z'5
)alt-v = 'workspace V' # for Video Editing5
Ecmd-ctrl-alt-shift-v = 'move-node-to-workspace V' # for Video Editing5
Ecmd-ctrl-alt-shift-p = 'move-node-to-workspace P' # for Photo Editing5
)alt-p = 'workspace P' # for Photo Editing5
alt-g = 'wo'5
[[on-window-det]]5
[[on-window-detected]]5
if.5
if.app-id = 'com.'5
if.app-id = 'com.app.'5
if.app-id = 'com.github.'5
if.app-id = 'com.github.wez.'5
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'5
on-focus-ch5
5on-focus-changed = ['move-mouse monitor-lazy-center']5
.on-focus-changed = ['move-mouse -lazy-center']5
-on-focus-changed = ['move-mouse lazy-center']5
)on-focus-changed = ['move-mouse -center']5
(on-focus-changed = ['move-mouse center']5
"on-focus-changed = ['move-mouse ']5
4on-focus-changed = ['move-mouse window-lazy-center']5
alt-c = 'workspace C'5
alt-c = 'workspace P5
alt-c = 'workspace P5
alt-p = 'workspace P5
)alt-p = 'workspace P' # For Project Manag5
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
@cmd-ctrl-alt-shift-p = 'move-node-to-workspace T' # for Terminal5
0cmd-ctrl-alt-shift-p = 'move-node-to-workspace P5
3cmd-ctrl-alt-shift-p = 'move-node-to-workspace P' #5
Jcmd-ctrl-alt-shift-p = 'move-node-to-workspace P' # for Project Management5
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
Jcmd-ctrl-alt-shift-p = 'move-node-to-workspace P' # for Project Management5
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
0cmd-ctrl-alt-shift-t = 'move-node-to-workspace P5
2cmd-ctrl-alt-shift-t = 'move-node-to-workspace P' 5
alt-x = 'workspac'5
!alt-x = 'workspace X' # for eXtra5
alt-x = 'workspace X'5
alt-a = 'wo'5
alt-a = 'workspace A'5
"alt-a = 'workspace A' # For Apple 5
,alt-a = 'workspace A' # For Apple applicatio5
cmd-ctr5
cmd-ctrl-alt-shift-a = 'mo'5
1cmd-ctrl-alt-shift-a = 'move-node-to-workspace A'5
Lcmd-ctrl-alt-shift-t = 'move-node-to-workspace P' # for Project Management``5
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
@cmd-ctrl-alt-shift-x = 'move-node-to-workspace T' # for Terminal5
@cmd-ctrl-alt-shift-x = 'move-node-to-workspace T' # for Terminal5
@cmd-ctrl-alt-shift-x = 'move-node-to-workspace C' # for Terminal5
alt-c =5
Lcmd-ctrl-alt-shift-x = 'move-node-to-workspace C' # for Code not in terminal5
[[on-window-dete]]5
if.5
if.app.
%if.app-id = 'com.clickup.desktop-app'5
[[on-window-detected]]
run = "move-"5
[[on-window-detected]]5
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
 run = "move-node-to-workspace T"5
# Wor5
# Workspaces for terminal5
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
 run = "move-node-to-workspace P"5
.alt-p = 'workspace P' # For Project Management5
.alt-p = 'workspace P' # For Project Management5
# ClickUp for total projec5
0alt-c = 'workspace C' # for Code not in terminal5
0alt-c = 'workspace C' # for Code not in terminal5
# Coding outside of 5
Lcmd-ctrl-alt-shift-c = 'move-node-to-workspace C' # for Code not in terminal5
Lcmd-ctrl-alt-shift-c = 'move-node-to-workspace C' # for Code not in terminal5
0alt-c = 'workspace C' # for Code not in terminal5
[[]]5
(if.app-id = 'company.thebrowser.Browser'5
[[on-window-detected]]5
2cmd-ctrl-alt-shift-b = 'move-node-to-workspace B' 
#alt-b = 'workspace B' # For browser5
?cmd-ctrl-alt-shift-b = 'move-node-to-workspace B' # for Browser5
Lcmd-ctrl-alt-shift-p = 'move-node-to-workspace P' # for Project Management``5
[[on-window-detected]]
# X5
[[on-window-detected]]
 # Coding outside of terminal (C)5
alt-p = 'workspace P' 5
# Wo5
*# ClickUp for total project management (P)5
# ClickUp 5
# ClickUp Desktop5
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
 run = "move-node-to-workspace P"5
# Workspaces for terminal (T)
$alt-t = 'workspace T' # for Terminal
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal5
'# Workspaces for project management (P)
# W5
[[on-window-detected]]
# I5
[[on-window-detected]]
# Workspaces for terminal (T)5
'# Workspaces for project management (P)5
#Terminal5
=cmd-ctrl-alt-shift-m = 'move-node-to-workspace M' # for Music5
#### Workspace for Music5
#### Workspace for Utilitie5
=cmd-ctrl-alt-shift-m = 'move-node-to-workspace M' # for Music5
1cmd-ctrl-alt-shift-m = 'move-node-to-workspace U;5
1cmd-ctrl-alt-shift-m = 'move-node-to-workspace U;5
1cmd-ctrl-alt-shift-2 = 'move-node-to-workspace 2'
1cmd-ctrl-alt-shift-3 = 'move-node-to-workspace 3'
1cmd-ctrl-alt-shift-4 = 'move-node-to-workspace 4'
1cmd-ctrl-alt-shift-5 = 'move-node-to-workspace 5'
1cmd-ctrl-alt-shift-6 = 'move-node-to-workspace 6'
1cmd-ctrl-alt-shift-7 = 'move-node-to-workspace 7'
1cmd-ctrl-alt-shift-8 = 'move-node-to-workspace 8'5
1cmd-ctrl-alt-shift-9 = 'move-node-to-workspace 9'5
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'5
# Arc Browser
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
1cmd-ctrl-alt-shift-b = 'move-node-to-workspace B'5
2# Mouse follows focus when focused monitor changes
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10
alt-b = 'workspace B' 
2cmd-ctrl-alt-shift-b = 'move-node-to-workspace B' 
alt-c = 'workspace C' 
2cmd-ctrl-alt-shift-c = 'move-node-to-workspace C' 
alt-u = 'workspace U' 
alt-p = 'workspace P' 
2cmd-ctrl-alt-shift-p = 'move-node-to-workspace P' 
$alt-t = 'workspace T' # for Terminal
N# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
Wf = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout5
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
1cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'5
%# 'service' binding mode declaration.5
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
1cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'5
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
 run = "move-node-to-workspace P"5
[[on-window-detected]]
 #### Workspace for Utilities (U)5
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
 run = "move-node-to-workspace T"5
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
 run = "move-node-to-workspace T"5
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
 run = "move-node-to-workspace T"5
N# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace5
 #### Workspace for Utilities (U)5
### Workspace for Utilities (U)5
## Workspace for Utilities (U)5
+##### Workspaces for project management (P)5
*#### Workspaces for project management (P)5
)### Workspaces for project management (P)5
(## Workspaces for project management (P)5
 #### Workspaces for terminal (T)5
### Workspaces for terminal (T)5
## Workspaces for terminal (T)5
Jcmd-ctrl-alt-shift-a = 'move-node-to-workspace A' # for Apple applications5
Jcmd-ctrl-alt-shift-a = 'move-node-to-workspace S' # for Apple applications5
8cmd-ctrl-alt-shift-a = 'move-node-to-workspace S' # for 5
Lcmd-ctrl-alt-shift-a = 'move-node-to-workspace S' # for System Configuration5
Lcmd-ctrl-alt-shift-a = 'move-node-to-workspace S' # for System Configuration5
1cmd-ctrl-alt-shift-p = 'move-node-to-workspace P'
# Worspace for System Configu
alt-s = "Workspace"5
alt-s = "workspace"5
2cmd-ctrl-alt-shift-a = 'move-node-to-workspace S' 5
alt-s = "workspace S"5
alt-s = "workspace S'5
!alt-m = 'workspace M' # for Music5
!alt-n = 'workspace N' # for Notes5
# Worspace for Notes (N)5
=cmd-ctrl-alt-shift-n = 'move-node-to-workspace N' # for Notes5
=cmd-ctrl-alt-shift-n = 'move-node-to-workspace N' # for Notes5
!alt-n = 'workspace N' # for Notes5
alt-n = 'workspace N' 
2cmd-ctrl-alt-shift-n = 'move-node-to-workspace N' 5
2alt-e = 'workspace E' # for File Explorer (Finder)5
# Wor
# Workspace5
# Workspace E5
Ncmd-ctrl-alt-shift-e = 'move-node-to-workspace E' # for File Explorer (Finder)5
2alt-e = 'workspace E' # for File Explorer (Finder)5
Ncmd-ctrl-alt-shift-e = 'move-node-to-workspace E' # for File Explorer (Finder)5
Nalt-e = 'workspace E'                             # for File Explorer (Finder)5
2cmd-ctrl-alt-shift-e = 'move-node-to-workspace E' 5
1cmd-ctrl-alt-shift-b = 'move-node-to-workspace B'5
1cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'5
1cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'5
after-startup-command = []5
G    # JankyBorders has a built-in detection of already running process,
3    # so it won't be run twice on AeroSpace restart
Y    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'5
X  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
a  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',AeroSpace5
  'exec-and-forget sketchybar'5
  'exec-and-forget sketchybar',5
  'exec-and-forget sketchybar'
.exec-on-workspace-change = ['/bin/bash', '-c',
d    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'5
'cmd-h = [] # Disable "hide application"5
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
 run = 'move-node-to-workspace B'5
X  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
Y   'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
'default-root-container-layout = 'tiles'5
?on-focused-monitor-changed = ['move-mouse monitor-lazy-center']5
[mo]
[mode]5
[mode.]5
[mode.main]5
[mode.main.]5
[mode.main.resize]5
[mode.main.resize.]5
[mode.main.resize.binding]5
[mode.main.resize.bindings]5
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode
$alt-shift-semicolon = 'mode service'
alt-shift-r = 'mode resize'
[mode.main.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
minus = 'resize smart -50'
equal = 'resize smart +50'
enter = 'mode main'
esc = 'mode main'5
$alt-shift-semicolon = 'mode service'5
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode5
[mode.main.resize.binding]5
[mode..resize.binding]5
[mode.service.binding]
$esc = ['reload-config', 'mode main']
:r = ['flatten-workspace-tree', 'mode main'] # reset layout
z#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
-] # Toggle between floating and tiling layout
:backspace = ['close-all-windows-but-current', 'mode main']
-alt-shift-h = ['join-with left', 'mode main']
-alt-shift-j = ['join-with down', 'mode main']
+alt-shift-k = ['join-with up', 'mode main']
.alt-shift-l = ['join-with right', 'mode main']5
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes5
%# 'service' binding mode declaration.5
Wf = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout5
# Arc Browser
# [[on-window-detected]]
*# if.app-id = 'company.thebrowser.Browser'
"# run = 'move-node-to-workspace B'
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
 run = "move-node-to-workspace P"
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
 run = "move-node-to-workspace T"
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
 run = "move-node-to-workspace T"
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
 run = 'move-node-to-workspace C'
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
 run = "move-node-to-workspace T"
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
 run = 'move-node-to-workspace C'
# Arc Browser
# [[on-window-detected]]
*# if.app-id = 'company.thebrowser.Browser'
"# run = 'move-node-to-workspace B'5
Arc Browser5
#Arc Browser5
(if.app-id = 'company.thebrowser.Browser'
&default-root-container-layout = 'auto'5
+default-root-container-orientation = 'auto'5
.alt-a = 'workspace A' # For Apple applications5
"alt-a = 'workspace A' # For Alfred5
1cmd-ctrl-alt-shift-1 = 'move-node-to-workspace 1'5
1cmd-ctrl-alt-shift-1 = 'move-node-to-workspace A'5
"alt-a = 'workspace A' # For Alfred
# Workspaces for browser (B)5
1cmd-ctrl-alt-shift-a = 'move-node-to-workspace S'5
gPQ|
[[on]]
[[on-window-detected]]5
if.5
run = 'mov'
"if.app-id = 'net.kovidgoyal.kitty'5
run = 'move-node-to-workspace'5
inner.horizontal = 105
inner.horizontal = 5
inner.vertical = 105
outer.right = 105
outer.bottom = 105
outer.left = 105
'# Worspace for System Configuration (S)5
# Worspace for SSH5
# Workspace for Work Apps5
cmd-ctrl-alt-shif5
[[on-window-detected]]
# Outlook5
if.5
if.ap5
 run = "move-node-to-workspace E"5
[[on-window-detected]]
# Teams5
!if.app-id = 'com.microsoft.teams'5
[[on-w]]5
#if.app-id = 'com.googlecode.iterm2'5
if.app-id = 'n5
# Kitty
[[on-window-detected]]
"if.app-id = 'net.kovidgoyal.kitty'
 run = "move-node-to-workspace T"5
[[on-window-detected]]
# Safa5
[[on-window-detected]]
# Windows App5
 run = "move-node-to-workspace S"5
  'exec-and-forget sketchybar',
X  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',5
2# Place a copy of this config to ~/.aerospace.toml
;# After that, you can edit ~/.aerospace.toml to your liking
5# It's not necessary to copy all keys to your config.
V# If the key is missing in your config, "default-config.toml" will serve as a fallback
L# You can use it to add commands that run after login to macOS user session.
G# 'start-at-login' needs to be 'true' for 'after-login-command' to work
F# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []
B# You can use it to add commands that run after AeroSpace startup.
<# 'after-startup-command' is run after 'after-login-command'
G# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
E  # JankyBorders has a built-in detection of already running process,
1  # so it won't be run twice on AeroSpace restart
  'exec-and-forget sketchybar',
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
*# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
c  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
# Start AeroSpace at login
start-at-login = true
R# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
.enable-normalization-flatten-containers = true
Fenable-normalization-opposite-orientation-for-nested-containers = true
<# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
A# The 'accordion-padding' specifies the size of accordion padding
.# You can set 0 to disable the padding feature
accordion-padding = 30
"# Possible values: tiles|accordion
'default-root-container-layout = 'tiles'
+# Possible values: horizontal|vertical|auto
T# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
R#               tall monitor (anything higher than wide) gets vertical orientation
+default-root-container-orientation = 'auto'
"# Possible values: (qwerty|dvorak)
?# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'
2# Mouse follows focus when focused monitor changes
;# Drop it from your config, if you don't like this behavior
N# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
A# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
?on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
4on-focus-changed = ['move-mouse window-lazy-center']
E# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
$# - Constant:     gaps.outer.top = 8
_# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
P#                 In this example, 24 is a default value when there is no match.
]#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
b#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
outer.top = 10
!# 'main' binding mode declaration
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
.# 'main' binding mode must be always presented
[mode.main.binding]
+cmd-h = []     # Disable "hide application"
&cmd-alt-h = [] # Disable "hide others"
# All possible keys:
## - Letters.        a, b, c, ..., z
## - Numbers.        0, 1, 2, ..., 9
;# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
$# - F-keys.         f1, f2, ..., f20
^# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
\#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
[# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
;#                   keypadMinus, keypadMultiply, keypadPlus
)# - Arrows.         left, down, up, right
/# All possible modifiers: cmd, alt, ctrl, shift
I# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
K# You can uncomment this line to open up terminal with alt + enter shortcut
G# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
S# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'
># See: https://nikitabobko.github.io/AeroSpace/commands#layout
.alt-slash = 'layout tiles horizontal vertical'
2alt-comma = 'layout accordion horizontal vertical'
=# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'
<# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'
alt-shift-f = 'fullscreen'
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
$alt-shift-minus = 'resize smart -50'
$alt-shift-equal = 'resize smart +50'
A# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
"alt-g = 'workspace G' # for Gaming
>alt-a = 'workspace A'                             # For Alfred
1cmd-ctrl-alt-shift-a = 'move-node-to-workspace A'
# Workspaces for browser (B)
alt-b = 'workspace B'
1cmd-ctrl-alt-shift-b = 'move-node-to-workspace B'
.# Workspace for Coding outside of terminal (C)
alt-c = 'workspace C'
1cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'
!# Workspace for file explorer (E)
alt-e = 'workspace E'
1cmd-ctrl-alt-shift-e = 'move-node-to-workspace E'
# Worspace for Notes (N)
alt-n = 'workspace N'
1cmd-ctrl-alt-shift-n = 'move-node-to-workspace N'
# Workspace for Utilities (U)
alt-u = 'workspace U'
1cmd-ctrl-alt-shift-m = 'move-node-to-workspace U'
'# Workspaces for project management (P)
alt-p = 'workspace P'
1cmd-ctrl-alt-shift-p = 'move-node-to-workspace P'
# Worspace for SSH (S)
alt-s = 'workspace S'
1cmd-ctrl-alt-shift-s = 'move-node-to-workspace S'
# Workspaces for terminal (T)
@alt-t = 'workspace T'                             # for Terminal
@cmd-ctrl-alt-shift-t = 'move-node-to-workspace T' # for Terminal
# Workspace for Work Apps (W)
alt-w = 'workspace W'
1cmd-ctrl-alt-shift-w = 'move-node-to-workspace W'
N# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
1cmd-ctrl-alt-shift-1 = 'move-node-to-workspace 1'
>cmd-ctrl-alt-shift-g = 'move-node-to-workspace G' # for Gaming
P# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
$alt-tab = 'workspace-back-and-forth'
Q# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
>alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode
$alt-shift-semicolon = 'mode service'
alt-shift-r = 'mode resize'
[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
enter = 'mode main'
esc = 'mode main'
%# 'service' binding mode declaration.
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
$esc = ['reload-config', 'mode main']
:r = ['flatten-workspace-tree', 'mode main'] # reset layout
z#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
-] # Toggle between floating and tiling layout
:backspace = ['close-all-windows-but-current', 'mode main']
-alt-shift-h = ['join-with left', 'mode main']
-alt-shift-j = ['join-with down', 'mode main']
+alt-shift-k = ['join-with up', 'mode main']
.alt-shift-l = ['join-with right', 'mode main']
# Arc Browser
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
 run = 'move-node-to-workspace B'
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
 run = "move-node-to-workspace P"
#Kitty
[[on-window-detected]]
"if.app-id = 'net.kovidgoyal.kitty'
 run = 'move-node-to-workspace T'
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
 run = "move-node-to-workspace T"
# Outlook
[[on-window-detected]]
#if.app-id = 'com.microsoft.Outlook'
 run = "move-node-to-workspace W"
# Teams
[[on-window-detected]]
"if.app-id = 'com.microsoft.teams2'
 run = "move-node-to-workspace W"
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
 run = "move-node-to-workspace T"
# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
 run = "move-node-to-workspace B"
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
 run = 'move-node-to-workspace C'
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
 run = "move-node-to-workspace T"
# Windows App
[[on-window-detected]]
#if.app-id = 'com.microsoft.rdc.mac'
 run = "move-node-to-workspace W"
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
 run = 'move-node-to-workspace C'5
F# Available commands: https://nikitabobko.github.io/AeroSpace/commands
L# You can use it to add commands that run after login to macOS user session.
G# 'start-at-login' needs to be 'true' for 'after-login-command' to work
start-at-login = false
after-login-command = []
<# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
A# The 'accordion-padding' specifies the size of accordion padding
.# You can set 0 to disable the padding feature
accordion-padding = 30
@non-empty-workspaces-root-containers-layout-on-startup = 'smart'
"# Possible values: tiles|accordion
'default-root-container-layout = 'tiles'
+# Possible values: horizontal|vertical|auto
T# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
E#  tall monitor (anything higher than wide) gets vertical orientation
+default-root-container-orientation = 'auto'
B# You can use it to add commands that run after AeroSpace startup.
<# 'after-startup-command' is run after 'after-login-command'
G# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
*  # Run Sketchybar together with AeroSpace
B  # sketchbar has a built-in detection of already running process,
1  # so it won't be run twice on AeroSpace restart
@  'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar',
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
*# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
c  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
R# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
.enable-normalization-flatten-containers = true
Fenable-normalization-opposite-orientation-for-nested-containers = true
"# Possible values: (qwerty|dvorak)
?# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'
2# Mouse follows focus when focused monitor changes
;# Drop it from your config, if you don't like this behavior
N# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
A# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
?on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
4on-focus-changed = ['move-mouse window-lazy-center']
E# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
$# - Constant:     gaps.outer.top = 8
_# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
P#                 In this example, 24 is a default value when there is no match.
]#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
b#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
gaps.inner.horizontal = 10
gaps.inner.vertical = 10
gaps.outer.left = 12
gaps.outer.bottom = 10
gaps.outer.top = 32
gaps.outer.right = 12
'[workspace-to-monitor-force-assignment]
1_code = 'built-in'
!2_web = ['secondary', 'built-in']
"3_todo = ['secondary', 'built-in']
$4_social = ['secondary', 'built-in']
#5_media = ['secondary', 'built-in']
!# 'main' binding mode declaration
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
.# 'main' binding mode must be always presented
[mode.main.binding]
# All possible keys:
## - Letters.        a, b, c, ..., z
## - Numbers.        0, 1, 2, ..., 9
;# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
$# - F-keys.         f1, f2, ..., f20
^# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
\#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
[# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
;#                   keypadMinus, keypadMultiply, keypadPlus
)# - Arrows.         left, down, up, right
/# All possible modifiers: cmd, alt, ctrl, shift
I# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
/alt-period = 'layout tiles horizontal vertical'
2alt-comma = 'layout accordion horizontal vertical'
alt-f = 'fullscreen'
alt-r = 'reload-config'
+cmd-h = []     # Disable "hide application"
&cmd-alt-h = [] # Disable "hide others"
#ctrl-alt-shift-l = 'workspace next'
#ctrl-alt-shift-h = 'workspace prev'
"ctrl-alt-shift-r = 'reload-config'
$alt-tab = 'workspace-back-and-forth'
Q# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
>alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
=# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = 'focus left'
ctrl-alt-j = 'focus down'
ctrl-alt-k = 'focus up'
ctrl-alt-l = 'focus right'
<# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-ctrl-h = 'move left'
cmd-alt-ctrl-j = 'move down'
cmd-alt-ctrl-k = 'move up'
cmd-alt-ctrl-l = 'move right'
-alt-shift-h = ['join-with left', 'mode main']
-alt-shift-j = ['join-with down', 'mode main']
+alt-shift-k = ['join-with up', 'mode main']
.alt-shift-l = ['join-with right', 'mode main']
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
$alt-shift-minus = 'resize smart -50'
$alt-shift-equal = 'resize smart +50'
Lctrl-alt-shift-cmd-1 = ['move-node-to-workspace 1_code', 'workspace 1_code']
Lctrl-alt-shift-cmd-2 = ['move-node-to-workspace 2_web', 'workspace 5_media']
Nctrl-alt-shift-cmd-3 = ['move-node-to-workspace 3_todo', 'workspace 4_social']
Nctrl-alt-shift-cmd-4 = ['move-node-to-workspace 4_social', 'workspace 3_todo']
Lctrl-alt-shift-cmd-5 = ['move-node-to-workspace 5_media', 'workspace 2_web']
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode
$alt-shift-backspace = 'mode service'
alt-shift-r = 'mode resize'
[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
enter = 'mode main'
esc = 'mode main'
%# 'service' binding mode declaration.
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
$esc = ['reload-config', 'mode main']
:r = ['flatten-workspace-tree', 'mode main'] # reset layout
z#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
-] # Toggle between floating and tiling layout
:backspace = ['close-all-windows-but-current', 'mode main']
# Windows that should float
[[on-window-detected]]
)if.app-id = 'com.apple.systempreferences'
run = 'layout floating'
[[on-window-detected]]
7if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = 'layout floating'
[[on-window-detected]]
%if.app-id = 'com.corecode.MacUpdater'
run = 'layout floating'
[[on-window-detected]]
 if.app-id = 'com.apple.AppStore'
run = 'layout floating'
[[on-window-detected]]
(if.app-id = "com.cisco.secureclient.gui"
run = 'layout floating'
[[on-window-detected]]
if.app-id = "com.openai.chat"
run = 'layout floating'
[[on-window-detected]]
%if.app-id = "com.1password.1password"
run = 'layout floating'
# move to 4_social workspace
[[on-window-detected]]
!if.app-id = 'com.apple.MobileSMS'
)run = ['move-node-to-workspace 4_social']
[[on-window-detected]]
(if.app-id = 'com.readdle.smartemail-Mac'
)run = ['move-node-to-workspace 4_social']
 # move to multi5_media workspace
[[on-window-detected]]
if.app-id = 'com.apple.Music'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
 if.app-id = 'com.apple.podcasts'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
(if.app-id = 'com.apple.QuickTimePlayerX'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
!if.app-id = 'com.colliderli.iina'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'imagetasks.Pixea'
(run = ['move-node-to-workspace 5_media']
# move to 1_code workspace
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
'run = ['move-node-to-workspace 1_code']
#Kitty
[[on-window-detected]]
"if.app-id = 'net.kovidgoyal.kitty'
'run = ['move-node-to-workspace 1_code']
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
'run = ['move-node-to-workspace 1_code']
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
'run = ['move-node-to-workspace 1_code']
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
'run = ['move-node-to-workspace 1_code']
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
'run = ['move-node-to-workspace 1_code']
# move to 2_web workspace
# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
&run = ['move-node-to-workspace 2_web']
# Arc
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
&run = ['move-node-to-workspace 2_web']
# Firefox Dev
[[on-window-detected]]
1if.app-id = 'org.mozilla.firefoxdeveloperedition'
&run = ['move-node-to-workspace 2_web']
# move to space 3_todo
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
'run = ['move-node-to-workspace 3_todo']
# Outlook
[[on-window-detected]]
#if.app-id = 'com.microsoft.Outlook'
'run = ['move-node-to-workspace 3_todo']
# Teams
[[on-window-detected]]
"if.app-id = 'com.microsoft.teams2'
'run = ['move-node-to-workspace 3_todo']
# Windows App
[[on-window-detected]]
#if.app-id = 'com.microsoft.rdc.mac'
'run = ['move-node-to-workspace 3_todo']
# Notes
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
'run = ['move-node-to-workspace 3_todo']
# Microsoft Word
[[on-window-detected]]
 if.app-id = 'com.microsoft.Word'
'run = ['move-node-to-workspace 3_todo']5
F# Available commands: https://nikitabobko.github.io/AeroSpace/commands
L# You can use it to add commands that run after login to macOS user session.
G# 'start-at-login' needs to be 'true' for 'after-login-command' to work
start-at-login = false
after-login-command = []
<# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
A# The 'accordion-padding' specifies the size of accordion padding
.# You can set 0 to disable the padding feature
accordion-padding = 30
@non-empty-workspaces-root-containers-layout-on-startup = 'smart'
"# Possible values: tiles|accordion
'default-root-container-layout = 'tiles'
+# Possible values: horizontal|vertical|auto
T# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
E#  tall monitor (anything higher than wide) gets vertical orientation
+default-root-container-orientation = 'auto'
B# You can use it to add commands that run after AeroSpace startup.
<# 'after-startup-command' is run after 'after-login-command'
G# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
*  # Run Sketchybar together with AeroSpace
B  # sketchbar has a built-in detection of already running process,
1  # so it won't be run twice on AeroSpace restart
@  'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar',
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
*# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
c  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
R# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
.enable-normalization-flatten-containers = true
Fenable-normalization-opposite-orientation-for-nested-containers = true
"# Possible values: (qwerty|dvorak)
?# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'
2# Mouse follows focus when focused monitor changes
;# Drop it from your config, if you don't like this behavior
N# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
A# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
?on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
4on-focus-changed = ['move-mouse window-lazy-center']
E# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
$# - Constant:     gaps.outer.top = 8
_# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
P#                 In this example, 24 is a default value when there is no match.
]#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
b#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
gaps.inner.horizontal = 10
gaps.inner.vertical = 10
gaps.outer.left = 12
gaps.outer.bottom = 10
gaps.outer.top = 32
gaps.outer.right = 12
'[workspace-to-monitor-force-assignment]
1_code = 'built-in'
!2_web = ['secondary', 'built-in']
"3_todo = ['secondary', 'built-in']
$4_social = ['secondary', 'built-in']
#5_media = ['secondary', 'built-in']
!# 'main' binding mode declaration
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
.# 'main' binding mode must be always presented
[mode.main.binding]
# All possible keys:
## - Letters.        a, b, c, ..., z
## - Numbers.        0, 1, 2, ..., 9
;# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
$# - F-keys.         f1, f2, ..., f20
^# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
\#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
[# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
;#                   keypadMinus, keypadMultiply, keypadPlus
)# - Arrows.         left, down, up, right
/# All possible modifiers: cmd, alt, ctrl, shift
I# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
/alt-period = 'layout tiles horizontal vertical'
2alt-comma = 'layout accordion horizontal vertical'
alt-f = 'fullscreen'
alt-r = 'reload-config'
+cmd-h = []     # Disable "hide application"
&cmd-alt-h = [] # Disable "hide others"
#ctrl-alt-shift-l = 'workspace next'
#ctrl-alt-shift-h = 'workspace prev'
"ctrl-alt-shift-r = 'reload-config'
$alt-tab = 'workspace-back-and-forth'
Q# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
>alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
=# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = 'focus left'
ctrl-alt-j = 'focus down'
ctrl-alt-k = 'focus up'
ctrl-alt-l = 'focus right'
<# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-ctrl-h = 'move left'
cmd-alt-ctrl-j = 'move down'
cmd-alt-ctrl-k = 'move up'
cmd-alt-ctrl-l = 'move right'
-alt-shift-h = ['join-with left', 'mode main']
-alt-shift-j = ['join-with down', 'mode main']
+alt-shift-k = ['join-with up', 'mode main']
.alt-shift-l = ['join-with right', 'mode main']
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
$alt-shift-minus = 'resize smart -50'
$alt-shift-equal = 'resize smart +50'
alt-1 = "workspace 1_code"
alt-2 = "workspace 2_web"
alt-3 = "workspace 3_todo"
alt-4 = "workspace 4_social"
alt-5 = "workspace 5_media"
Lctrl-alt-shift-cmd-1 = ['move-node-to-workspace 1_code', 'workspace 1_code']
Lctrl-alt-shift-cmd-2 = ['move-node-to-workspace 2_web', 'workspace 5_media']
Nctrl-alt-shift-cmd-3 = ['move-node-to-workspace 3_todo', 'workspace 4_social']
Nctrl-alt-shift-cmd-4 = ['move-node-to-workspace 4_social', 'workspace 3_todo']
Lctrl-alt-shift-cmd-5 = ['move-node-to-workspace 5_media', 'workspace 2_web']
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode
$alt-shift-backspace = 'mode service'
alt-shift-r = 'mode resize'
[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
enter = 'mode main'
esc = 'mode main'
%# 'service' binding mode declaration.
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
$esc = ['reload-config', 'mode main']
:r = ['flatten-workspace-tree', 'mode main'] # reset layout
z#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
-] # Toggle between floating and tiling layout
:backspace = ['close-all-windows-but-current', 'mode main']
# Windows that should float
[[on-window-detected]]
)if.app-id = 'com.apple.systempreferences'
run = 'layout floating'
[[on-window-detected]]
7if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = 'layout floating'
[[on-window-detected]]
%if.app-id = 'com.corecode.MacUpdater'
run = 'layout floating'
[[on-window-detected]]
 if.app-id = 'com.apple.AppStore'
run = 'layout floating'
[[on-window-detected]]
(if.app-id = "com.cisco.secureclient.gui"
run = 'layout floating'
[[on-window-detected]]
if.app-id = "com.openai.chat"
run = 'layout floating'
[[on-window-detected]]
%if.app-id = "com.1password.1password"
run = 'layout floating'
# move to 4_social workspace
[[on-window-detected]]
!if.app-id = 'com.apple.MobileSMS'
)run = ['move-node-to-workspace 4_social']
[[on-window-detected]]
(if.app-id = 'com.readdle.smartemail-Mac'
)run = ['move-node-to-workspace 4_social']
 # move to multi5_media workspace
[[on-window-detected]]
if.app-id = 'com.apple.Music'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
 if.app-id = 'com.apple.podcasts'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
(if.app-id = 'com.apple.QuickTimePlayerX'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
!if.app-id = 'com.colliderli.iina'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'imagetasks.Pixea'
(run = ['move-node-to-workspace 5_media']
# move to 1_code workspace
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
'run = ['move-node-to-workspace 1_code']
#Kitty
[[on-window-detected]]
"if.app-id = 'net.kovidgoyal.kitty'
'run = ['move-node-to-workspace 1_code']
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
'run = ['move-node-to-workspace 1_code']
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
'run = ['move-node-to-workspace 1_code']
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
'run = ['move-node-to-workspace 1_code']
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
'run = ['move-node-to-workspace 1_code']
# move to 2_web workspace
# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
&run = ['move-node-to-workspace 2_web']
# Arc
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
&run = ['move-node-to-workspace 2_web']
# Firefox Dev
[[on-window-detected]]
1if.app-id = 'org.mozilla.firefoxdeveloperedition'
&run = ['move-node-to-workspace 2_web']
# move to space 3_todo
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
'run = ['move-node-to-workspace 3_todo']
# Outlook
[[on-window-detected]]
#if.app-id = 'com.microsoft.Outlook'
'run = ['move-node-to-workspace 3_todo']
# Teams
[[on-window-detected]]
"if.app-id = 'com.microsoft.teams2'
'run = ['move-node-to-workspace 3_todo']
# Windows App
[[on-window-detected]]
#if.app-id = 'com.microsoft.rdc.mac'
'run = ['move-node-to-workspace 3_todo']
# Notes
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
'run = ['move-node-to-workspace 3_todo']
# Microsoft Word
[[on-window-detected]]
 if.app-id = 'com.microsoft.Word'
'run = ['move-node-to-workspace 3_todo']5
if.app-id = "com.openai.chat"
run = 'layout floating'5
[[on-window-detected]]5
gaps.outer.top = 325
gaps.outer.top = 645
[[on]]5
if.5
if.ap5
if.app-id = 'com.'5
if.app-id = 'org.'5
if.app-id = 'org.mozilla.'5
!if.app-id = 'org.mozilla.firefox'5
[[o]]5
if.5
if.ap
run = ['m']5
 ctrl-alt-1- = 'workspace 1_code'5
ctrl-alt-2 = "workspace 2_web"5
ctrl-alt-3 = 'workspace 3_todo'5
!ctrl-alt-4 = 'workspace 4_social'5
 ctrl-alt-5 = 'workspace 5_media'5
calt-5 = 'workspace 5_media'5
ctrl-alt3 = 'workspace 3_todo'5
ctrl-al2 = "workspace 2_web"5
F# Available commands: https://nikitabobko.github.io/AeroSpace/commands
L# You can use it to add commands that run after login to macOS user session.
G# 'start-at-login' needs to be 'true' for 'after-login-command' to work
start-at-login = false
after-login-command = []
<# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
A# The 'accordion-padding' specifies the size of accordion padding
.# You can set 0 to disable the padding feature
accordion-padding = 30
@non-empty-workspaces-root-containers-layout-on-startup = 'smart'
"# Possible values: tiles|accordion
'default-root-container-layout = 'tiles'
+# Possible values: horizontal|vertical|auto
T# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
E#  tall monitor (anything higher than wide) gets vertical orientation
+default-root-container-orientation = 'auto'
B# You can use it to add commands that run after AeroSpace startup.
<# 'after-startup-command' is run after 'after-login-command'
G# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
*  # Run Sketchybar together with AeroSpace
B  # sketchbar has a built-in detection of already running process,
1  # so it won't be run twice on AeroSpace restart
@  'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar',
Z  # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
*# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
c  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
R# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
.enable-normalization-flatten-containers = true
Fenable-normalization-opposite-orientation-for-nested-containers = true
"# Possible values: (qwerty|dvorak)
?# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'
2# Mouse follows focus when focused monitor changes
;# Drop it from your config, if you don't like this behavior
N# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
A# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
?on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
4on-focus-changed = ['move-mouse window-lazy-center']
E# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
$# - Constant:     gaps.outer.top = 8
_# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
P#                 In this example, 24 is a default value when there is no match.
]#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
b#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
gaps.inner.horizontal = 10
gaps.inner.vertical = 10
gaps.outer.left = 12
gaps.outer.bottom = 10
gaps.outer.top = 32
gaps.outer.right = 12
'[workspace-to-monitor-force-assignment]
1_code = 'built-in'
!2_web = ['secondary', 'built-in']
"3_todo = ['secondary', 'built-in']
$4_social = ['secondary', 'built-in']
#5_media = ['secondary', 'built-in']
!# 'main' binding mode declaration
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
.# 'main' binding mode must be always presented
[mode.main.binding]
# All possible keys:
## - Letters.        a, b, c, ..., z
## - Numbers.        0, 1, 2, ..., 9
;# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
$# - F-keys.         f1, f2, ..., f20
^# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
\#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
[# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
;#                   keypadMinus, keypadMultiply, keypadPlus
)# - Arrows.         left, down, up, right
/# All possible modifiers: cmd, alt, ctrl, shift
I# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
/alt-period = 'layout tiles horizontal vertical'
2alt-comma = 'layout accordion horizontal vertical'
alt-f = 'fullscreen'
alt-r = 'reload-config'
+cmd-h = []     # Disable "hide application"
&cmd-alt-h = [] # Disable "hide others"
#ctrl-alt-shift-l = 'workspace next'
#ctrl-alt-shift-h = 'workspace prev'
"ctrl-alt-shift-r = 'reload-config'
$alt-tab = 'workspace-back-and-forth'
Q# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
>alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
=# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = 'focus left'
ctrl-alt-j = 'focus down'
ctrl-alt-k = 'focus up'
ctrl-alt-l = 'focus right'
<# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-ctrl-h = 'move left'
cmd-alt-ctrl-j = 'move down'
cmd-alt-ctrl-k = 'move up'
cmd-alt-ctrl-l = 'move right'
-alt-shift-h = ['join-with left', 'mode main']
-alt-shift-j = ['join-with down', 'mode main']
+alt-shift-k = ['join-with up', 'mode main']
.alt-shift-l = ['join-with right', 'mode main']
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
$alt-shift-minus = 'resize smart -50'
$alt-shift-equal = 'resize smart +50'
 ctrl-alt-1- = 'workspace 1_code'
ctrl-alt-2 = "workspace 2_web"
ctrl-alt-3 = 'workspace 3_todo'
!ctrl-alt-4 = 'workspace 4_social'
 ctrl-alt-5 = 'workspace 5_media'
Lctrl-alt-shift-cmd-1 = ['move-node-to-workspace 1_code', 'workspace 1_code']
Lctrl-alt-shift-cmd-2 = ['move-node-to-workspace 2_web', 'workspace 5_media']
Nctrl-alt-shift-cmd-3 = ['move-node-to-workspace 3_todo', 'workspace 4_social']
Nctrl-alt-shift-cmd-4 = ['move-node-to-workspace 4_social', 'workspace 3_todo']
Lctrl-alt-shift-cmd-5 = ['move-node-to-workspace 5_media', 'workspace 2_web']
<# See: https://nikitabobko.github.io/AeroSpace/commands#mode
$alt-shift-backspace = 'mode service'
alt-shift-r = 'mode resize'
[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
># See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'
enter = 'mode main'
esc = 'mode main'
%# 'service' binding mode declaration.
B# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
$esc = ['reload-config', 'mode main']
:r = ['flatten-workspace-tree', 'mode main'] # reset layout
z#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
-] # Toggle between floating and tiling layout
:backspace = ['close-all-windows-but-current', 'mode main']
# Windows that should float
[[on-window-detected]]
)if.app-id = 'com.apple.systempreferences'
run = 'layout floating'
[[on-window-detected]]
7if.app-id = 'com.runningwithcrayons.Alfred-Preferences'
run = 'layout floating'
[[on-window-detected]]
%if.app-id = 'com.corecode.MacUpdater'
run = 'layout floating'
[[on-window-detected]]
 if.app-id = 'com.apple.AppStore'
run = 'layout floating'
[[on-window-detected]]
(if.app-id = "com.cisco.secureclient.gui"
run = 'layout floating'
[[on-window-detected]]
%if.app-id = "com.1password.1password"
run = 'layout floating'
# move to 4_social workspace
[[on-window-detected]]
!if.app-id = 'com.apple.MobileSMS'
)run = ['move-node-to-workspace 4_social']
[[on-window-detected]]
(if.app-id = 'com.readdle.smartemail-Mac'
)run = ['move-node-to-workspace 4_social']
 # move to multi5_media workspace
[[on-window-detected]]
if.app-id = 'com.apple.Music'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
 if.app-id = 'com.apple.podcasts'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
(if.app-id = 'com.apple.QuickTimePlayerX'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
!if.app-id = 'com.colliderli.iina'
(run = ['move-node-to-workspace 5_media']
[[on-window-detected]]
if.app-id = 'imagetasks.Pixea'
(run = ['move-node-to-workspace 5_media']
# move to 1_code workspace
# Terminal
[[on-window-detected]]
 if.app-id = 'com.apple.Terminal'
'run = ['move-node-to-workspace 1_code']
#Kitty
[[on-window-detected]]
"if.app-id = 'net.kovidgoyal.kitty'
'run = ['move-node-to-workspace 1_code']
# Iterm
[[on-window-detected]]
#if.app-id = 'com.googlecode.iterm2'
'run = ['move-node-to-workspace 1_code']
# Visual Studio Code
[[on-window-detected]]
"if.app-id = 'com.microsoft.VSCode'
'run = ['move-node-to-workspace 1_code']
# Wezterm
[[on-window-detected]]
$if.app-id = 'com.github.wez.wezterm'
'run = ['move-node-to-workspace 1_code']
# Xcode
[[on-window-detected]]
 if.app-id = 'com.apple.dt.Xcode'
'run = ['move-node-to-workspace 1_code']
# move to 2_web workspace
# Safari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
&run = ['move-node-to-workspace 2_web']
# Arc
[[on-window-detected]]
(if.app-id = 'company.thebrowser.Browser'
&run = ['move-node-to-workspace 2_web']
# Firefox Dev
[[on-window-detected]]
1if.app-id = 'org.mozilla.firefoxdeveloperedition'
&run = ['move-node-to-workspace 2_web']
# move to space 3_todo
# ClickUp Desktop App
[[on-window-detected]]
%if.app-id = 'com.clickup.desktop-app'
'run = ['move-node-to-workspace 3_todo']
# Outlook
[[on-window-detected]]
#if.app-id = 'com.microsoft.Outlook'
'run = ['move-node-to-workspace 3_todo']
# Teams
[[on-window-detected]]
"if.app-id = 'com.microsoft.teams2'
'run = ['move-node-to-workspace 3_todo']
# Windows App
[[on-window-detected]]
#if.app-id = 'com.microsoft.rdc.mac'
'run = ['move-node-to-workspace 3_todo']
# Notes
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
'run = ['move-node-to-workspace 3_todo']
# Microsoft Word
[[on-window-detected]]
 if.app-id = 'com.microsoft.Word'
'run = ['move-node-to-workspace 3_todo']5
1cmd-ctrl-alt-shift-s = 'move-node-to-workspace S'5
>on-focused-monitor-changed = ['move-mouse window-lazy-center']5
a  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',AeroSpace5
Lcmd-ctrl-alt-shift-c = 'move-node-to-workspace C' # for Code not in terminal5
P# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
Lcmd-ctrl-alt-shift-a = 'move-node-to-workspace Ands#workspace-back-and-forth
Pcmd-ctrl-alt-shift-a = 'move-node-to-workspace commands#workspace-back-and-forth5
Jcmd-ctrl-alt-shift-t = 'move-node-to-workspace P' # for Project Management5
alt-x = 'worspace X'5
 alt-x = 'worspace X' # for Xcode5
=cmd-ctrl-alt-shift-x = 'move-node-to-workspace X' # for Xcode5
if.app-id = '5
if.app-id = 'com.apple.dt.Xcode
 if.app-id = 'com.apple.dt.Xcode'5
 if.app-id = 'com.apple.dt.Xcode'
 run = "move-node-to-workspace X"5
!alt-x = 'workspace X' # for Xcode5
Jcmd-ctrl-alt-shift-p = 'move-node-to-workspace P' # for Project Management5
